Absolutely! Here's the **finalized list of 12 String-based coding questions**, suitable for freshers, focusing on the **`String` class** and a couple of tasks using **`StringBuffer` / `StringBuilder`** â€” with **clear pseudocode** and **no collections used**.

---

## âœ… **Java String Class Coding Questions (With Pseudocode)**

**Level:** Freshers | **Focus:** No collections, only basic logic

---

### ðŸ”¤ **String Class Questions**

---

### **1. Reverse a String**

ðŸ“˜ *Description:* Reverse the characters in the string.

ðŸ“„ *Pseudocode:*

```
Initialize result = ""
Loop from end of string to start
    Append each character to result
Print result
```

---

### **2. Check if a String is a Palindrome**

ðŸ“˜ *Description:* A string is a palindrome if it reads the same backward as forward.

ðŸ“„ *Pseudocode:*

```
Initialize reversed = reverse of string
If string equals reversed
    Print "Palindrome"
Else
    Print "Not Palindrome"
```

---

### **3. Count the Number of Vowels**

ðŸ“˜ *Description:* Count how many vowels (a, e, i, o, u) exist in the string.

ðŸ“„ *Pseudocode:*

```
Initialize count = 0
Loop through each character
    If character is a, e, i, o, u (case-insensitive)
        Increment count
Print count
```

---

### **4. Remove All Spaces**

ðŸ“˜ *Description:* Remove every space character from the string.

ðŸ“„ *Pseudocode:*

```
Initialize result = ""
Loop through each character
    If character is not a space
        Append to result
Print result
```

---

### **5. Convert Lowercase to Uppercase (without using toUpperCase)**

ðŸ“˜ *Description:* Convert all lowercase letters to uppercase.

ðŸ“„ *Pseudocode:*

```
Initialize result = ""
Loop through each character
    If character is between 'a' and 'z'
        Convert to uppercase using ASCII logic
    Append to result
Print result
```

---

### **6. Find the Length of a String Without Using .length()**

ðŸ“˜ *Description:* Use a loop to count the number of characters.

ðŸ“„ *Pseudocode:*

```
Initialize count = 0
For each character in string
    Increment count
Print count
```

---

### **7. Replace All Occurrences of a Character**

ðŸ“˜ *Description:* Replace every occurrence of a given character.

ðŸ“„ *Pseudocode:*

```
Initialize result = ""
Loop through each character
    If character == oldChar
        Append newChar
    Else
        Append character
Print result
```

---

### **8. Replace First Occurrence of a Character**

ðŸ“˜ *Description:* Replace only the first time a character appears.

ðŸ“„ *Pseudocode:*

```
Initialize result = ""
Initialize flag = false
Loop through each character
    If character == oldChar and flag is false
        Append newChar
        Set flag = true
    Else
        Append character
Print result
```

---

### **9. Replace Last Occurrence of a Character**

ðŸ“˜ *Description:* Replace only the last time a character appears.

ðŸ“„ *Pseudocode:*

```
Find lastIndex of oldChar in string
Loop through each index
    If index == lastIndex
        Append newChar
    Else
        Append current character
Print result
```

---

### **10. Compare Two Strings Without Using .equals()**

ðŸ“˜ *Description:* Character-by-character comparison of two strings.

ðŸ“„ *Pseudocode:*

```
If lengths are not equal
    Print "Not equal"
Else
    Loop through characters
        If any character differs
            Print "Not equal"
            Exit
    Print "Equal"
```

---

### ðŸ§µ **StringBuffer / StringBuilder Questions**

---

### **11. Reverse a String Using `StringBuffer`**

ðŸ“˜ *Description:* Use the built-in `.reverse()` method.

ðŸ“„ *Pseudocode:*

```
Create StringBuffer with input string
Call .reverse()
Print result
```

---

### **12. Append Strings Using `StringBuilder`**

ðŸ“˜ *Description:* Efficient string concatenation using `.append()`.

ðŸ“„ *Pseudocode:*

```
Create StringBuilder sb
sb.append("Hello")
sb.append(" ")
sb.append("World")
Print sb.toString()
```

---

Would you like this organized in a **handout-style PDF** or shared in **Google Docs format** for your students?
